//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Goudkoorts.Model;
using Goudkoorts.Tracks;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class BoardController
{


    private Dictionary<String, Track> board;
    private int _width;
    private int _height;
    private Water firstBlockWater;

    public virtual Track SpawnLocations
	{
		get;
		set;
	}

	public virtual IEnumerable<Track> Track
	{
		get;
		set;
	}

	public virtual IEnumerable<Minecart> Minecart
	{
		get;
		set;
	}

	public virtual IEnumerable<Ship> Ship
	{
		get;
		set;
	}

	public virtual BoardModel BoardModel
    {
        get;
        set;
    }

	public virtual string ShowBoard()
	{
        String expBoard = "";

        


        for (int x = 0; x < _width; x++)
        {

            for (int y = 0; y < _height; y++)
            {

                expBoard += board[x + "-" + y].getChar();

            }
            expBoard += Environment.NewLine;
        }
        return expBoard;
    }

    //weet niet zeker of dit public of private moet worden
    public void generateBoard(int Width, int Height)
    {
        board = new Dictionary<string, global::Track>();

        _height = Height;
        _width = Width;

        firstBlockWater = new Water();
        Water currentBlock = firstBlockWater;

        for(int i = 0; i < _width; i++)
        {

            currentBlock = firstBlockWater.next = new Water();

        }


        for (int x = 0; x < _width; x++)
        {

            for (int y = 0; y < _height; y++)
            {

                board.Add(x + "-" + y, new Track());


            }

        }

    }

    public void buildBoard()
    {

        // dit moet handmatig, hieronder staat een vvorbeeld voor hoe het moet

        board["0-0"] = new Rail();
        board["1-1"] = new Yard();


    }

}

